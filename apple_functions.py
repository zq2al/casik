import telebot
import sqlite3
import time
import requests
import random
import json
import requests
from blackjack import blackjack_map
from pyqiwip2p import QiwiP2P
from pyqiwip2p.p2p_types import QiwiCustomer, QiwiDatetime
from apple_keyboard import menu_keyboard, game_keyboard, apple_keyboard_start, apples_map, triple_keyboard, triple_map, admin_keyboard, nazad, setting_kassa, otmena_keyboard, hideBoard, deposit_btn, sogl_keyboard, vivod_keyboard, close_message_keyboard, profile_keyboard, mines_keyboard, mines_map
from config import admin, token, chats, link_chat, news_link, admin_link
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

bot = telebot.TeleBot(token)

#–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def db_table_val (user_id: int, username: str, priglasil_id):
    conn = sqlite3.connect("database.db")
    cursor = conn.cursor()
    cursor.execute(f"select count(*) from apple where user_id = {user_id}")
    if username != None:
        if cursor.fetchone()[0] == 0:
            cursor.execute('INSERT INTO apple (user_id, username, priglasil_id) VALUES (?,?,?)', (user_id, username, priglasil_id,))
            conn.commit()
            bot.send_message(user_id,f"üéâ–ü—Ä–∏–≤–µ—Ç –∏–≥—Ä–æ–∫!\n\n"
                             f"–ü–æ–ª–∏—Ç–∏–∫–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º.\n"
                             f"1. –ò–≥—Ä–∞—è —É –Ω–∞—Å, –≤—ã –±–µ—Ä—ë—Ç–µ –≤—Å–µ —Ä–∏—Å–∫–∏ –∑–∞ —Å–≤–æ–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å–µ–±—è.\n"
                             f"2. –ü—Ä–∏–Ω–∏–º–∞—è –ø—Ä–∞–≤–∏–ª–∞, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–≤–æ—ë —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏–µ!\n"
                             f"3. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω –≤ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ/–æ–±–º–∞–Ω –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã!\n"
                             f"4. –ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!\n"
                             f"5. –°–∫—Ä–∏–ø—Ç—ã, —Å—Ö–µ–º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ!\n"
                             f"6. –ï—Å–ª–∏ –±—É–¥—É—Ç –≤—ã—è–≤–ª–µ–Ω—ã –≤—ã—à–µ–ø–µ—Ä—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏, –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω –¥–æ –≤—ã—è—Å–Ω–µ–Ω–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤!\n\n"
                             f"–í—ã –∏–≥—Ä–∞–µ—Ç–µ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã, –ø–æ–∫—É–ø–∞—è –∏—Ö –∑–∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–µ–Ω—å–≥–∏. –õ—é–±–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ–º! –í—ã–≤–æ–¥ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 24—á! –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –í—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –∞ —Ç–∞–∫ –∂–µ –≤–æ–ø—Ä–æ—Å–∞–º –∏–≥—Ä–∞–º –æ–±–æ–≥–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫ –±–æ—Ç—É. –ü–∏—à–∏—Ç–µ —Å—Ä–∞–∑—É –ø–æ –¥–µ–ª—É, –∞ –Ω–µ ¬´–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –¢—É—Ç?¬ª\n"
                             f"–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∏–∑–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏ —á–µ—Ç–∫–æ –∏ —è—Å–Ω–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ –º—É—á–∞–ª–∞—Å—å –∏ –Ω–µ –ø—ã—Ç–∞–ª–∞—Å—å –í–∞—Å –ø–æ–Ω—è—Ç—å.\n"
                             f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!\n\n",
                             reply_markup = sogl_keyboard)
            if priglasil_id !=None:
                ops = 0.2
                cursor.execute('UPDATE apple SET referal_all = referal_all + 1 WHERE user_id = (?)', (priglasil_id,))
                cursor.execute(f'UPDATE apple SET balance = balance + {ops} WHERE user_id = (?)', (priglasil_id,))
                cursor.execute(f'UPDATE apple SET referal_money = referal_money + {ops} WHERE user_id = (?)', (priglasil_id,))
                conn.commit()
                bot.send_message(priglasil_id, text = f'üôéüèº‚Äç‚ôÇÔ∏è –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª - {username}!\nü™É –í—ã –ø–æ–ª—É—á–∏–ª 0.20 RUB\nü™É–¢–∞–∫–∂–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 5% –æ—Ç –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π')
        else:
            glav_message(user_id)
    else:
        bot.send_message(user_id, '‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –≤ Telegram\n–°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ –≤–æ –≤–∫–ª–∞–¥–∫–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" - "–í—ã–±—Ä–∞—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ - –Ω–∞–∂–º–∏—Ç–µ /start')


def func_add_favorite(call, game_name):
    us_id = call.from_user.id
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute(f'SELECT favorite_{game_name} FROM apple WHERE user_id = (?)', (us_id,))
    favorit_game = cursor.fetchone()[0]
    if favorit_game == 0:
        cursor.execute(f'UPDATE apple SET favorite_{game_name} = 1 WHERE user_id = {us_id}')
        conn.commit()
        bot.answer_callback_query(callback_query_id= call.id,text =  "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",show_alert = True)
    if favorit_games == 1:
        cursor.execute(f'UPDATE apple SET favorite_{game_name} = 0 WHERE user_id = {us_id}')
        conn.commit()
        bot.answer_callback_query(callback_query_id= call.id, text = "‚ùå –£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",show_alert = True)





def get_username(message):
    try:
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute('SELECT username FROM apple WHERE user_id = (?)', (message.from_user.id,))
        us_name = cursor.fetchone()
        if message.from_user.username == None or us_name[0] == None:
            bot.send_message(call.from_user.id, text = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start')
            return False



        if us_name[0] != message.from_user.username:
            cursor.execute('UPDATE apple SET username = (?) WHERE user_id = (?)', (message.from_user.username, message.from_user.id,))
            conn.commit()
            return True
        else:
            return True
    except:
        bot.send_message(message.from_user.id, text = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start')
        return False


def get_usernamecall(call):
    try:
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute('SELECT username FROM apple WHERE user_id = (?)', (call.from_user.id,))
        us_name = cursor.fetchone()[0]
        if call.from_user.username == None:
            bot.send_message(call.from_user.id, text = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start')
            return False
        if us_name != call.from_user.username:
            cursor.execute('UPDATE apple SET username = (?) WHERE user_id = (?)', (call.from_user.username, call.from_user.id,))
            conn.commit()
            return True
        else:
        	return True
    except:
        bot.send_message(call.from_user.id, text = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start')
        return False

#–ú–µ–Ω—é
def glav_menu(us_id):
    balance = get_user_balance(us_id)
    bot.send_message(us_id, text = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=hideBoard)
    bot.send_photo(us_id, photo = 'https://imgur.com/lv6SX8L', caption = f"<b>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} RUB</b>", reply_markup=menu_keyboard(us_id), parse_mode = 'HTML')

def glav_message(us_id):
    balance = get_user_balance(us_id)
    bot.send_photo(us_id, photo = 'https://imgur.com/lv6SX8L', caption = f"<b>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} RUB</b>", reply_markup=menu_keyboard(us_id), parse_mode = 'HTML')

def profile(us_id,name):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute("SELECT all_win FROM apple WHERE user_id = ('%s')"%(us_id))
    all_win = round(cursor.fetchone()[0], 2)
    cursor.execute("SELECT all_lose FROM apple WHERE user_id = ('%s')"%(us_id))
    all_lose = cursor.fetchone()[0]
    cursor.execute("SELECT all_game_apple FROM apple WHERE user_id = ('%s')"%(us_id))
    all_game_apple = cursor.fetchone()[0]
    cursor.execute("SELECT all_game_triple FROM apple WHERE user_id = ('%s')"%(us_id))
    all_game_triple = cursor.fetchone()[0]
    cursor.execute("SELECT all_game_mines FROM apple WHERE user_id = ('%s')"%(us_id))
    all_game_mines = cursor.fetchone()[0]
    cursor.execute("SELECT how_deposit FROM apple WHERE user_id = ('%s')"%(us_id))
    deposit = cursor.fetchone()[0]
    cursor.execute("SELECT how_vivod FROM apple WHERE user_id = ('%s')"%(us_id))
    vivod = cursor.fetchone()[0]
    cursor.execute("SELECT game_win FROM apple WHERE user_id = ('%s')"%(us_id))
    game_win = cursor.fetchone()[0]
    cursor.execute("SELECT game_lose FROM apple WHERE user_id = ('%s')"%(us_id))
    game_lose = cursor.fetchone()[0]

    balance = get_user_balance(us_id)
    bot.send_photo(us_id, photo = 'https://imgur.com/wc7Jddd', caption =  f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüôé‚Äç‚ôÇÔ∏è –ò–º—è: <code>{name}</code>\nüåë ID: <code>{us_id}</code>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüèÜ –í—ã–∏–≥—Ä–∞–Ω–æ –∏–≥—Ä - {game_win}\nüí£ –ü—Ä–æ–∏–≥—Ä–∞–Ω–æ –∏–≥—Ä -{game_lose}\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüí∞ –ë–∞–ª–∞–Ω—Å: {balance} RUB\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ", reply_markup=profile_keyboard,parse_mode = 'HTML')

def stats(us_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    #cursor.execute("SELECT COUNT(1) FROM apple")
    #all_users = cursor.fetchone()[0]
    #cursor.execute("SELECT SUM(`game_win`) FROM apple")
    #game_win = cursor.fetchone()[0]
    #cursor.execute("SELECT SUM(`game_lose`) FROM apple")
    #game_lose = cursor.fetchone()[0]
    #cursor.execute("SELECT SUM(`all_win`) FROM apple")
    #all_win = cursor.fetchone()[0]
    #cursor.execute("SELECT SUM(`all_lose`) FROM apple")
    #all_lose = cursor.fetchone()[0]
    #cursor.execute("SELECT all_vivod FROM settings WHERE bot = 1")
    #vivod = cursor.fetchone()[0]

    keys = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton(text = 'üí¨ –ß–∞—Ç', url = link_chat)
    btn2 = types.InlineKeyboardButton(text = 'üë®‚Äçüíª –ê–¥–º–∏–Ω', url = admin_link)
    btn3 = types.InlineKeyboardButton(text = 'üóû –ù–æ–≤–æ—Å—Ç–∏', url = news_link)
    btn4 = types.InlineKeyboardButton(text = 'üèÜ –¢–æ–ø —Ä–µ—Ñ–æ–≤–æ–¥–æ–≤', callback_data = 'bas')
    btn5 = types.InlineKeyboardButton(text = 'üì• –¢–æ–ø –≤—ã–≤–æ–¥–æ–≤', callback_data = 'top_vivod')
    btn6 = types.InlineKeyboardButton(text = 'ü§ë –¢–æ–ø –≤—ã–∏–≥—Ä—ã—à–µ–π', callback_data = 'top_win')

    keys.add(btn1,btn2,btn3)
    keys.add(btn6)
    keys.add(btn5, btn4)
    bot.send_photo(us_id,photo = 'https://imgur.com/lv6SX8L', caption = f'üìã <b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç</b>', reply_markup = keys, parse_mode = 'HTML')


def adminka(message, admin):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  us_id = message.from_user.id
  if admin == 1:
    if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –º–∏–Ω. —Å—Ç–∞–≤–∫—É':
      cursor.execute("SELECT min_stavka FROM settings WHERE bot = 1")
      now_min_stavka = cursor.fetchone()[0]
      bot.send_message(us_id, text=f'–°–µ–π—á–∞—Å –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç {now_min_stavka}, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', reply_markup = nazad)
      bot.register_next_step_handler(message, new_min_stavka)

    if message.text == '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É':
      msg = bot.send_message(us_id, text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞:\n\n<b>–í–∞—à —Ç–µ–∫—Å—Ç</b> - –ñ–∏—Ä–Ω—ã–π\n\n<i>–í–∞—à —Ç–µ–∫—Å—Ç</i> - –ö—É—Ä—Å–∏–≤\n\n<code>–í–∞—à —Ç–µ–∫—Å—Ç</code> - –ö–æ–ø–∏—Ä—É–µ–º—ã–π –≤ –∫–ª–∏–∫\n\n<u>–í–∞—à —Ç–µ–∫—Å—Ç</u> -–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π\n\n<a href="–í–∞—à–∞ —Å—Å—ã–ª–∫–∞">–í–∞—à –¢–µ–∫—Å—Ç</a> - –°—Å—ã–ª–∫–∞ –≤ —Å–ª–æ–≤–µ/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏', reply_markup = nazad )
      bot.register_next_step_handler(msg, rassilka)

    if message.text == '–í—ã–¥–∞—Ç—å/–ó–∞–±—Ä–∞—Ç—å –±–∞–ª–∞–Ω—Å':
      bot.send_message(us_id, text='–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', reply_markup = nazad)
      bot.register_next_step_handler(message, get_balance)

    if message.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Å—Å—ã':
      bot.send_message(us_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é',reply_markup=setting_kassa)

    if message.text == '–°–Ω—è—Ç—å –∫–∞—Å—Å—É':
      cursor.execute("UPDATE settings SET kassa = ('%s') WHERE bot = 1"%(0,))
      conn.commit()
      bot.send_message(us_id, text='–ö–∞—Å—Å–∞ —Å–Ω—è—Ç–∞!', reply_markup = nazad)

    if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω—Ç–∏–º–∏–Ω—É—Å':
      cursor.execute("SELECT antiminus FROM settings WHERE bot = 1")
      antiminus = cursor.fetchone()[0]
      bot.send_message(us_id, text=f'–°–µ–π—á–∞—Å –∞–Ω—Ç–∏–º–∏–Ω—É—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {antiminus}, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', reply_markup = nazad)
      bot.register_next_step_handler(message,new_antiminus)

    if message.text == '–í –º–µ–Ω—é':
      bot.register_next_step_handler(message, glav_menu)

    if message.text == '–ù–∞–∑–∞–¥':
      bot.send_message(us_id, text='–ú–µ–Ω—é –∞–¥–º–∏–Ω–∞', reply_markup = admin_keyboard)

#–ê–¥–º–∏–Ω–∫–∞
def adminka_menu(message):
    try:
        us_id = message.from_user.id
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute("SELECT admin FROM apple WHERE user_id = ('%s')"%(us_id))
        admin = cursor.fetchone()[0]
        cursor.execute("SELECT COUNT(1) FROM apple")
        all_users = cursor.fetchone()[0]
        cursor.execute("SELECT all_deposit FROM settings WHERE bot = ('%s')"%(1,))
        all_deposit = round(cursor.fetchone()[0], 2)
        cursor.execute("SELECT kassa FROM settings WHERE bot = ('%s')"%(1,))
        kassa = round(cursor.fetchone()[0], 2)
        cursor.execute("SELECT pvp_money FROM settings WHERE bot = ('%s')"%(1,))
        pvp_money = round(cursor.fetchone()[0], 2)
        cursor.execute("SELECT SUM(`game_win`) FROM apple")
        game_win = cursor.fetchone()[0]
        cursor.execute("SELECT SUM(`game_lose`) FROM apple")
        game_lose = cursor.fetchone()[0]
        cursor.execute("SELECT SUM(`all_win`) FROM apple")
        all_win = cursor.fetchone()[0]
        cursor.execute("SELECT SUM(`all_lose`) FROM apple")
        all_lose = cursor.fetchone()[0]
        cursor.execute("SELECT all_vivod FROM settings WHERE bot = 1")
        vivod = cursor.fetchone()[0]
        if admin == 1:
            bot.send_message(us_id, text=f'üìä <b>C—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:</b>\n\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüë®‚Äçüíª –ß–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {all_users}\nüíµ –í–Ω–µ—Å–µ–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤: {all_deposit}\nüì§ –í—ã–ø–ª–∞—á–µ–Ω–æ {vivod} RUB\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüè¶ –ö–∞—Å—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞: {kassa} RUB\nüè¶ –í—ã—Ä—É—á–∫–∞ —Å –∫–æ–º–∏—Å—Å–∏–π —Å–µ–≥–æ–¥–Ω—è: {pvp_money} RUB\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüèÜ –í—ã–∏–≥—Ä–∞–Ω–æ –∏–≥—Ä: {game_win} —à—Ç ({all_win} RUB)\nüí£ –ü—Ä–æ–∏–≥—Ä–∞–Ω–æ –∏–≥—Ä: {game_lose} —à—Ç ({all_lose} RUB)\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ ', reply_markup = admin_keyboard, parse_mode = 'HTML')
            bot.register_next_step_handler(message, adminka, admin)
    except Exception as e:
      bot.send_message(us_id, e)

#–í—ã–≤–æ–¥ —Å—É–º–º–∞
def vivod_sum(message):
    us_id = message.from_user.id
    try:
        if int(message.text) >= 30:
            summa = int(message.text)
            bot.send_message(us_id, text=f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞", reply_markup=vivod_keyboard())
            bot.register_next_step_handler(message,vivod_rekv,summa)
        else:
            bot.send_message(us_id, text=f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ - 30—Ä", reply_markup=menu_keyboard(us_id))
    except:
        bot.send_message(us_id, text=f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!", reply_markup=menu_keyboard(us_id))

def vivod_rekv(message, summa):
    us_id = message.from_user.id
    sposob = message.text
    bot.send_message(us_id, text=f"–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:", reply_markup=vivod_keyboard())
    bot.register_next_step_handler(message, vivod, sposob, summa)


def get_all_users(priglasil_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute(f'''SELECT user_id FROM apple ''')
    row = cursor.fetchall()
    for user in row:
        user = user[0]
        if priglasil_id == user:
            return priglasil_id
        else:
            pass







#–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
def get_stavka(message, game_name, rg = 0):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor() # - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞–≤–æ–∫
    us_id = message.from_user.id
    balance = get_user_balance(us_id)
    cursor.execute("SELECT min_stavka FROM settings WHERE bot = ('%s')"%(1,))
    min_stavka = cursor.fetchone()[0]
    cursor.execute("SELECT max_stavka FROM settings WHERE bot = ('%s')"%(1,))
    max_stavka = cursor.fetchone()[0]
    if message.text.isdigit():
        if int(message.text) <= balance:
            if int(message.text)>= min_stavka:
              if int(message.text)<=max_stavka:
                cursor.execute("UPDATE apple SET game_status = 1 WHERE user_id = (?)", (us_id,))
                stavka = message.text
                stavka = int(stavka)
                if game_name == 'apple':
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    msg = bot.send_message(us_id, text=f"–ò–≥—Ä–∞ –Ω–∞—á–∞–ª—Å—å!", reply_markup=hideBoard)
                    bot.send_photo(us_id, photo = 'https://imgur.com/zDZBsIj',caption=f"üçè –¢–µ–∫—É—â–∏–π –≤—ã–π–≥—Ä—ã—à- {stavka} RUB (x1)\n\nüçé –°–ª–µ–¥—É—â–∏–π –≤—ã–π–≥—Ä—ã—à: {stavka *1.25} RUB (x1.25)", reply_markup=apple_keyboard_start)
                    bot.delete_message(chat_id=us_id, message_id=msg.message_id)
                    cursor.execute("UPDATE apple SET all_game_apple = all_game_apple + 1 WHERE user_id = ('%s')"%(us_id,))
                    conn.commit()
                    func_apple_map(user_id=us_id, apples_map=apples_map, now_state=1, now_x=1.25, now_stavka=stavka, win_money = stavka)
                if game_name == 'triple':
                    conn.close()
                    func_triple_map(user_id=us_id, triple_map=triple_map, now_stavka=stavka)
                    msg = bot.send_message(us_id, text=f"–ò–≥—Ä–∞ –Ω–∞—á–∞–ª—Å—å!", reply_markup=hideBoard)
                    bot.send_photo(us_id, photo = 'https://imgur.com/7tCq3Go', caption=f"üí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {stavka}", reply_markup=triple_keyboard)
                    bot.delete_message(chat_id=us_id, message_id=msg.message_id)
                if game_name == 'mines':
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_photo(us_id, photo = 'https://imgur.com/7QT9M4p', caption=f"üí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {stavka}", reply_markup=mines_keyboard)
                    cursor.execute("UPDATE apple SET all_game_mines = all_game_mines + 1 WHERE user_id = ('%s')"%(us_id,))
                    conn.commit()
                    func_mines_map(user_id = us_id, mines_map=mines_map, now_stavka = stavka, now_x = 1, now_state = 0, win_money = stavka)
                if game_name == 'blackjack':
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_message(us_id, text = "–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫", reply_markup = menu_keyboard(us_id))
                    msg = bot.send_message(chats, text=f"üÉè –ù–æ–≤–∞—è –∏–≥—Ä–∞ (BLACKJACK)!\n–ò–≥—Ä–æ–∫: @{message.from_user.username}\n–°—Ç–∞–≤–∫–∞: {stavka} RUB ")
                    func_create_blackjack(username = message.from_user.username,us_id = us_id, stavka = stavka, message_id = msg.message_id)


                if game_name == 'cube' and rg == 0:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_message(us_id, text = "–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫", reply_markup = menu_keyboard(us_id))
                    msg = bot.send_message(chats, text=f"üé≤ –ù–æ–≤–∞—è –∏–≥—Ä–∞ (–ö–£–ë)!\n–ò–≥—Ä–æ–∫: @{message.from_user.username}\n–°—Ç–∞–≤–∫–∞: {stavka} RUB ")
                    func_create_cube(username = message.from_user.username,us_id = us_id, stavka = stavka, message_id = msg.message_id)

                if game_name == 'bouling' and rg == 0:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_message(us_id, text = "–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫", reply_markup = menu_keyboard(us_id))
                    msg = bot.send_message(chats, text = f"üé≥ –ù–æ–≤–∞—è –∏–≥—Ä–∞ (–ë–û–£–õ–ò–ù–ì)!\n–ò–≥—Ä–æ–∫: @{message.from_user.username}\n–°—Ç–∞–≤–∫–∞: {stavka} RUB ")
                    func_create_bouling(username = message.from_user.username,us_id = us_id, stavka = stavka, message_id = msg.message_id)
                if game_name == 'bouling' and rg == 1:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    func_bot_bouling(us_id = us_id, stavka = stavka)

                if game_name == 'backetball' and rg == 0:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_message(us_id, text = "–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫", reply_markup = menu_keyboard(us_id))
                    msg = bot.send_message(chats, text = f"üèÄ –ù–æ–≤–∞—è –∏–≥—Ä–∞ (–ë–ê–°–ö–ï–¢–ë–û–õ)!\n–ò–≥—Ä–æ–∫: @{message.from_user.username}\n–°—Ç–∞–≤–∫–∞: {stavka} RUB ")
                    func_create_backetball(username = message.from_user.username,us_id = us_id, stavka = stavka, message_id = msg.message_id)
                if game_name == 'backetball' and rg == 1:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    func_bot_backetball(us_id = us_id, stavka = stavka)

                if game_name == 'dartc' and rg == 0:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_message(us_id, text = "–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫", reply_markup = menu_keyboard(us_id))
                    msg = bot.send_message(chats, text = f"üéØ –ù–æ–≤–∞—è –∏–≥—Ä–∞ (–î–ê–†–¢–°)!\n–ò–≥—Ä–æ–∫: @{message.from_user.username}\n–°—Ç–∞–≤–∫–∞: {stavka} RUB ")
                    func_create_dartc(username = message.from_user.username,us_id = us_id, stavka = stavka, message_id = msg.message_id)
                if game_name == 'dartc' and rg == 1:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    func_bot_dartc(us_id = us_id, stavka = stavka)

                if game_name == 'football' and rg == 0:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_message(us_id, text = "–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫", reply_markup = menu_keyboard(us_id))
                    msg = bot.send_message(chats, text = f"‚öΩÔ∏è –ù–æ–≤–∞—è –∏–≥—Ä–∞ (–§–£–¢–ë–û–õ)!\n–ò–≥—Ä–æ–∫: @{message.from_user.username}\n–°—Ç–∞–≤–∫–∞: {stavka} RUB ")
                    func_create_football(username = message.from_user.username,us_id = us_id, stavka = stavka, message_id = msg.message_id)
                if game_name == 'football' and rg == 1:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    func_bot_football(us_id = us_id, stavka = stavka)

                if game_name == 'avtomat' and rg == 0:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    bot.send_message(us_id, text = "–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫", reply_markup = menu_keyboard(us_id))
                    msg = bot.send_message(chats, text = f"üé∞ –ù–æ–≤–∞—è –∏–≥—Ä–∞ (–ê–í–¢–û–ú–ê–¢)!\n–ò–≥—Ä–æ–∫: @{message.from_user.username}\n–°—Ç–∞–≤–∫–∞: {stavka} RUB ")
                    func_create_avtomat(username = message.from_user.username,us_id = us_id, stavka = stavka, message_id = msg.message_id)
                if game_name == 'avtomat' and rg == 1:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    func_bot_avtomat(us_id = us_id, stavka = stavka)
                if game_name == 'bj' and rg == 1:
                    cursor.execute(f'UPDATE apple SET balance = balance - {stavka} where user_id = ?', [us_id])
                    conn.commit()
                    func_bot_blackjack(us_id = us_id, stavka = stavka)

              else:
                bot.send_message(us_id, text=f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - {max_stavka} —Ä—É–±", reply_markup=menu_keyboard(us_id))

            else:
                bot.send_message(us_id, text=f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - {min_stavka} —Ä—É–±", reply_markup=menu_keyboard(us_id))
        else:
            bot.send_message(us_id, text=f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤", reply_markup=menu_keyboard(us_id))
    else:
        glav_message(us_id)
             




#–ò–≥—Ä—ã —Å –±–æ—Ç–æ–º
def func_start_bot_game(us_id, game_name):
    if game_name == 'cube':
        func_bot_cube(us_id)
    if game_name == 'bj':
        func_bot_blackjack(us_id)
    if game_name == 'bouling':
        func_bot_bouling(us_id)
    if game_name == 'backetball':
        func_bot_backetball(us_id)
    if game_name == 'football':
        func_bot_football(us_id)
    if game_name == 'dartc':
        func_bot_dartc(us_id)
    if game_name == 'avtomat':
        func_bot_avtomat(us_id)


def func_bot_blackjack(us_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    bot_score = random.randint(15, 26)
    key = random.choice(list(blackjack_map.keys()))
    value = random.choice(list(blackjack_map.values()))
    link = blackjack_map.get(key)
    link = random.choice(list(link.values()))
    key2 = random.choice(list(blackjack_map.keys()))
    value2 = random.choice(list(blackjack_map.values()))
    link2 = blackjack_map.get(key2)
    link2 = random.choice(list(link2.values()))
    if key == 11 and key2 == 11:
      res = 21
    else:
      res = int(key) + int(key2)
    cursor.execute(f'UPDATE apple SET bj_score_for_bot = {bot_score} WHERE user_id = {us_id}')
    cursor.execute(f'UPDATE apple SET bj_score_for_user = {res} WHERE user_id = {us_id}')
    conn.commit()
    bj_btn  = types.InlineKeyboardMarkup(row_width = 1)
    btn1 = types.InlineKeyboardButton(text  = '–í–∑—è—Ç—å –µ—â–µ', callback_data = f'eshebot_bj{us_id}')
    btn2 = types.InlineKeyboardButton(text  = '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è', callback_data = f'stopbot_bj{us_id}')
    bj_btn.add(btn1, btn2)
    bot.send_photo(us_id, photo = open('bj_image/' + link, 'rb'), reply_markup = hideBoard)
    bot.send_photo(us_id, photo = open('bj_image/' +link2, 'rb'))
    bot.send_message(us_id, text = f'ü§ñ –ë–æ—Ç —Ä–µ—à–∏–ª –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏ –∂–¥–µ—Ç –≤–∞—Å')
    time.sleep(0.3)
    bot.send_message(us_id, text = f'–£ –≤–∞—Å –≤ —Å—É–º–º–µ {res} –æ—á–∫–æ–≤', reply_markup = bj_btn )

def func_bot_cube (us_id):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  usg = bot.send_dice(us_id, 'üé≤')
  time.sleep(5)
  bot.send_message(us_id, f'üé≤ –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {usg.dice.value}')
  bsg = bot.send_dice(us_id, 'üé≤')
  time.sleep(5)
  if usg.dice.value > bsg.dice.value:
    bot.send_message(us_id, f'üé≤ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüü¢ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏', reply_markup=menu_keyboard(us_id))
  if usg.dice.value < bsg.dice.value:
    bot.send_message(us_id, f'üé≤ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüî¥ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏', reply_markup=menu_keyboard(us_id))
  if usg.dice.value == bsg.dice.value:
    bot.send_message(us_id, f'üé≤ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\n‚ö™Ô∏è –ù–∏—á—å—è!', reply_markup=menu_keyboard(us_id))

def func_bot_bouling (us_id):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  usg = bot.send_dice(us_id, 'üé≥')
  time.sleep(5)
  bot.send_message(us_id, f'üé≥ –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {usg.dice.value}')
  bsg = bot.send_dice(us_id, 'üé≥')
  time.sleep(5)
  if usg.dice.value > bsg.dice.value:
    bot.send_message(us_id, f'üé≥ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüü¢ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value < bsg.dice.value:
    bot.send_message(us_id, f'üé≥ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüî¥ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value == bsg.dice.value:
    bot.send_message(us_id, f'üé≥ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\n‚ö™Ô∏è –ù–∏—á—å—è!', reply_markup=menu_keyboard(us_id))
def func_bot_backetball (us_id):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  usg = bot.send_dice(us_id, 'üèÄ')
  time.sleep(5)
  bot.send_message(us_id, f'üèÄ –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {usg.dice.value}')
  bsg = bot.send_dice(us_id, 'üèÄ')
  time.sleep(5)
  if usg.dice.value > bsg.dice.value:
    bot.send_message(us_id, f'üèÄ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüü¢ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value < bsg.dice.value:
    bot.send_message(us_id, f'üèÄ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüî¥ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value == bsg.dice.value:
    bot.send_message(us_id, f'üèÄ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\n‚ö™Ô∏è –ù–∏—á—å—è!', reply_markup=menu_keyboard(us_id))

def func_bot_dartc (us_id):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  usg = bot.send_dice(us_id, 'üéØ')
  time.sleep(5)
  bot.send_message(us_id, f'üéØ –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {usg.dice.value}')
  bsg = bot.send_dice(us_id, 'üéØ')
  time.sleep(5)
  if usg.dice.value > bsg.dice.value:
    bot.send_message(us_id, f'üéØ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüü¢ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value < bsg.dice.value:
    bot.send_message(us_id, f'üéØ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüî¥ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value == bsg.dice.value:
    bot.send_message(us_id, f'üéØ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\n‚ö™Ô∏è –ù–∏—á—å—è!')

def func_bot_football (us_id):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  usg = bot.send_dice(us_id, '‚öΩÔ∏è')
  time.sleep(5)
  bot.send_message(us_id, f'‚öΩÔ∏è –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {usg.dice.value}')
  bsg = bot.send_dice(us_id, '‚öΩÔ∏è')
  time.sleep(5)
  if usg.dice.value > bsg.dice.value:
    bot.send_message(us_id, f'‚öΩÔ∏è –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüü¢ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value < bsg.dice.value:
    bot.send_message(us_id, f'‚öΩÔ∏è –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüî¥ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value == bsg.dice.value:
    bot.send_message(us_id, f'‚öΩÔ∏è –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\n‚ö™Ô∏è –ù–∏—á—å—è!', reply_markup=menu_keyboard(us_id))

def func_bot_avtomat (us_id):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  usg = bot.send_dice(us_id, 'üé∞')
  time.sleep(5)
  bot.send_message(us_id, f'üé∞ –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {usg.dice.value}')
  bsg = bot.send_dice(us_id, 'üé∞')
  time.sleep(5)
  if usg.dice.value > bsg.dice.value:
    bot.send_message(us_id, f'üé∞ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüü¢ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value < bsg.dice.value:
    bot.send_message(us_id, f'üé∞ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\nüî¥ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!', reply_markup=menu_keyboard(us_id))
  if usg.dice.value == bsg.dice.value:
    bot.send_message(us_id, f'üé∞ –ë–æ—Ç—É –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {bsg.dice.value}\n‚ö™Ô∏è –ù–∏—á—å—è!', reply_markup=menu_keyboard(us_id))


#–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã —è–±–ª–æ–∫
def func_apple_map(user_id: int, apples_map, now_state: int, now_x: int, now_stavka: int, win_money: int):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  mapa = json.dumps(apples_map)

  cursor.execute('UPDATE apple SET map_buttons = ? where user_id = ?', (mapa,user_id))
  cursor.execute('UPDATE apple SET now_state = ? where user_id = ?', (now_state,user_id))
  cursor.execute('UPDATE apple SET now_x = ? where user_id = ?', (now_x,user_id))
  cursor.execute('UPDATE apple SET now_stavka = ? where user_id = ?', (now_stavka,user_id))
  cursor.execute('UPDATE apple SET win_money = ? where user_id = ?', (win_money,user_id))
  conn.commit()

#–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã —Ç—Ä–∏–ø–ª
def func_triple_map (user_id: int, triple_map, now_stavka: int):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  mapa = json.dumps(triple_map)
  cursor.execute('UPDATE apple SET triple_map_buttons = ? where user_id = ?', (mapa,user_id))
  cursor.execute('UPDATE apple SET now_stavka = ? where user_id = ?', (now_stavka,user_id))
  conn.commit()


#–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã –º–∏–Ω
def func_mines_map(user_id: int, mines_map, now_stavka: int, now_x: int, now_state: int, win_money: int):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    mapa = json.dumps(mines_map)
    cursor.execute('UPDATE apple SET mines_map_buttons = ? where user_id = ?', (mapa,user_id))
    cursor.execute('UPDATE apple SET now_stavka = ? where user_id = ?', (now_stavka,user_id))
    cursor.execute('UPDATE apple SET now_x = ? where user_id = ?', (now_x, user_id))
    cursor.execute('UPDATE apple SET now_state = ? where user_id = ?', (now_state, user_id))
    cursor.execute('UPDATE apple SET win_money = ? where user_id = ?', (win_money,user_id))
    conn.commit()

def func_create_cube(username, us_id, stavka: int, message_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    glkey = random.randint(1111111, 9999999)
    mapa = {glkey : {username: stavka}}
    cursor.execute('INSERT INTO list_game_cube VALUES (? , ? , ?, ?, ?)', (glkey, username, stavka, us_id, message_id))
    conn.commit()

def func_create_blackjack(username, us_id, stavka: int, message_id, player2 = 0, score = 0):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    glkey = random.randint(1111111, 9999999)
    mapa = {glkey : {username: stavka}}
    cursor.execute('INSERT INTO list_game_blackjack VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', (glkey, username, stavka, us_id, message_id, player2, score, score, score, score))
    conn.commit()

def func_create_bouling(username, us_id, stavka: int, message_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    glkey = random.randint(1111111, 9999999)
    mapa = {glkey : {username: stavka}}
    cursor.execute('INSERT INTO list_game_bouling VALUES (? , ? , ?, ?, ?)', (glkey, username, stavka, us_id, message_id))
    conn.commit()

def func_create_backetball(username, us_id, stavka: int, message_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    glkey = random.randint(1111111, 9999999)
    mapa = {glkey : {username: stavka}}
    cursor.execute('INSERT INTO list_game_backetball VALUES (? , ? , ?, ?, ?)', (glkey, username, stavka, us_id, message_id))
    conn.commit()

def func_create_dartc(username, us_id, stavka: int, message_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    glkey = random.randint(1111111, 9999999)
    mapa = {glkey : {username: stavka}}
    cursor.execute('INSERT INTO list_game_dartc VALUES (? , ? , ?, ?, ?)', (glkey, username, stavka, us_id, message_id))
    conn.commit()

def func_create_football(username, us_id, stavka: int, message_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    glkey = random.randint(1111111, 9999999)
    mapa = {glkey : {username: stavka}}
    cursor.execute('INSERT INTO list_game_football VALUES (? , ? , ?, ?, ?)', (glkey, username, stavka, us_id, message_id))
    conn.commit()

def func_create_avtomat(username, us_id, stavka: int, message_id):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    glkey = random.randint(1111111, 9999999)
    mapa = {glkey : {username: stavka}}
    cursor.execute('INSERT INTO list_game_avtomat VALUES (? , ? , ?, ?, ?)', (glkey, username, stavka, us_id, message_id))
    conn.commit()


#–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ id
def generate_qid():
    qid = random.randint(1111111, 9999999)
    return qid

#–ü–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å
def get_user_balance(id):
    try:
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute(f'''SELECT balance FROM apple WHERE user_id = '{id}' ''')
        balance = round(cursor.fetchone()[0], 2)
        return balance
    except:
        pass

#–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∫–∏
def get_admin_status(us_id):
    try:
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute("SELECT admin FROM apple WHERE user_id = ('%s')"%(us_id))
        admin = cursor.fetchone()[0]
        return admin
    except:
        pass
# –ü–ª–∞—Ç–µ–∂–∫–∞ –ø–µ–µ—Ä
def payeer(message):
  us_id = message.from_user.id
  #try:
  summa = int(message.text)
  if summa >= 10:
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        #cursor.execute("SELECT crystal_key FROM settings WHERE bot = 1")
        #key = cursor.fetchone()[0]
        #cursor.execute("SELECT crystal_login FROM settings WHERE bot = 1")
        #login =cursor.fetchone()[0]
        values = {
        'account':'P1064634299',
        'apiId':'1586752726',
        'apiPass':'M4LgA6Smkt7tZRrh'}

        headers = {
        'Content-Type': 'application/x-www-form-urlencoded'
        }
        response = requests.post(url = 'https://payeer.com/ajax/api/api.php', data=values, headers=headers)
        response.encoding = 'utf-8'

        print (response.content)
        #json_response = response.json()
        #url = json_response['url']
        #ids = json_response['id']
        #cursor.execute('UPDATE apple SET pay_id = (?) where user_id = (?)', (ids, us_id))
        #conn.commit()
        #btn_list = types.InlineKeyboardMarkup(row_width = 1)
        #btn1 = InlineKeyboardButton(text = 'üí∏ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', url = url)
        #btn2 = InlineKeyboardButton(text = 'üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data = f'check_payeer_{summa}')
        #btn3 = InlineKeyboardButton(text = '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data = 'back_popol')
        #btn_list.add(btn1,btn2,btn3)
        #bot.send_photo(us_id, photo = 'https://sun9-74.userapi.com/impg/kLo0xGJaA9ldITqLhaJ43qajbEpX5c1ycFw-wg/JyojAiFErCs.jpg?size=1000x400&quality=96&sign=594cab719193d6bf0043067dacd5fddc&type=album',caption = f'C—á—ë—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 60 –º–∏–Ω!\nC—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n{url}', reply_markup = btn_list)
 # except:
    #bot.send_message(us_id,f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!', reply_markup = menu_keyboard(us_id))

# –ü–ª–∞—Ç–µ–∂–∫–∞ –∫—Ä–∏—Å—Ç–∞–ª
def crystal_pay(message):
  us_id = message.from_user.id
  try:
    summa = int(message.text)
    if summa >= 10:
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute("SELECT crystal_key FROM settings WHERE bot = 1")
        key = cursor.fetchone()[0]
        cursor.execute("SELECT crystal_login FROM settings WHERE bot = 1")
        login =cursor.fetchone()[0]
        response = requests.get(url = f'https://api.crystalpay.ru/v1/?s={key}&n={login}&o=receipt-create&amount={summa}&lifetime=60')
        json_response = response.json()
        url = json_response['url']
        ids = json_response['id']
        cursor.execute('UPDATE apple SET pay_id = (?) where user_id = (?)', (ids, us_id))
        conn.commit()
        btn_list = types.InlineKeyboardMarkup(row_width = 1)
        btn1 = InlineKeyboardButton(text = 'üí∏ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', url = url)
        btn2 = InlineKeyboardButton(text = 'üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data = f'check_crystal_{summa}')
        btn3 = InlineKeyboardButton(text = '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data = 'back_popol')
        btn_list.add(btn1,btn2,btn3)
        bot.send_photo(us_id, photo = 'https://imgur.com/1xT6uHl',caption = f'C—á—ë—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 60 –º–∏–Ω!\nC—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n{url}', reply_markup = btn_list)
  except:
    bot.send_message(us_id,f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!', reply_markup = menu_keyboard(us_id))
# –ü–ª–∞—Ç–µ–∂–∫–∞ QIWI P2P
def qiwip2p(message):
    us_id = message.from_user.id
    try:
        pay = int(message.text)
        if pay >= 10:
            us_id = message.from_user.id
            qid = generate_qid()
            conn = sqlite3.connect('database.db', check_same_thread=False)
            cursor = conn.cursor()
            cursor.execute("SELECT p2p_key FROM settings WHERE bot = 1")
            KEY = cursor.fetchone()[0]
        #KEY = json.loads(KEY[0])
            cursor.execute('UPDATE apple SET pay_id = (?) where user_id = (?)', (qid, us_id))
            cursor.execute('UPDATE apple SET pay_sum = (?) where user_id = (?)', (pay, us_id))
            conn.commit()
            p2p = QiwiP2P(auth_key=KEY)

            new_bill = p2p.bill(bill_id=qid, amount=pay, lifetime=30, comment = "casino bot")#, customFields={'themeCode': 'Uliana-AVVHLGyhXI'})
            bot.send_photo(us_id, photo = 'https://imgur.com/1xT6uHl',caption = f'C—á—ë—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 30 –º–∏–Ω!\nC—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n{new_bill.pay_url}', reply_markup = deposit_btn)
        else:
            bot.send_message(us_id,f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 10 RUB', reply_markup = menu_keyboard(us_id))
    except:
        bot.send_message(us_id,f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!', reply_markup = menu_keyboard(us_id))
#QIWI key
def new_qiwikey(message):
    if message.text != '–ê–¥–º–∏–Ω–∫–∞':
        try:
            conn = sqlite3.connect('database.db', check_same_thread=False)
            cursor = conn.cursor()
            cursor.execute("UPDATE settings set p2p_key = (?) WHERE bot = 1", (message.text,))
            conn.commit()
            bot.send_message(message.from_user.id, f'–ö–ª—é—á –∏–∑–º–µ–Ω–µ–Ω!')
        except Exception as e:
            bot.send_message(message.from_user.id, f'–û—à–∏–±–∫–∞\n{e}')
    else:
        adminka_menu(message)
      




def zero_game(message):
    us_id = message.from_user.id
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    username = message.text[1:]
    try:
        cursor.execute(f'''UPDATE apple SET game_status = 0 WHERE username = '{username}' ''')
        conn.commit()
        bot.send_message(us_id, text = '–£—Å–ø–µ—à–Ω–æ!', reply_markup = admin_keyboard)
    except:
        bot.send_message(us_id, text = '–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', reply_markup = admin_keyboard)



#–†–∞—Å—Å—ã–ª–∫–∞
def rassilka(message):
    us_id = message.from_user.id
    if message.text == '–ê–¥–º–∏–Ω–∫–∞':
        adminka_menu(message)
    else:
        rassilka = message.text
        conn = sqlite3.connect('database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute(f'''SELECT user_id FROM apple ''')
        row = cursor.fetchall()
        bot.send_message(us_id, text = "–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!",reply_markup=admin_keyboard)
        succ = 0
        unsucc = 0
        for user in row:
            try:
                bot.send_message(user[0], f"{rassilka}",reply_markup=close_message_keyboard, parse_mode="HTML")
                succ = succ+1
            except:
                unsucc = unsucc + 1
            
        bot.send_message(us_id, text = f'–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {succ}\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ: {unsucc}',reply_markup=admin_keyboard)


#–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞


#–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω —Å—Ç–∞–≤–∫–∏
def new_min_stavka(message):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    us_id = message.from_user.id
    if message.text == '–ê–¥–º–∏–Ω–∫–∞':
        adminka_menu(message)
    else:
        new_min_stavka = message.text
        try:
            new_min_stavka = int(new_min_stavka)
            cursor.execute("UPDATE settings SET min_stavka = ('%s') WHERE bot = 1"%(new_min_stavka,))
            conn.commit()
            bot.send_message(us_id,f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ç–µ–ø–µ—Ä—å {new_min_stavka}', reply_markup=admin_keyboard)
        except:
            bot.send_message(us_id,f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!', reply_markup=admin_keyboard)

def new_max_stavka(message):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    us_id = message.from_user.id
    if message.text == '–ê–¥–º–∏–Ω–∫–∞':
        adminka_menu(message)
    else:
        new_max_stavka = message.text
        try:
            new_max_stavka = int(new_max_stavka)
            cursor.execute("UPDATE settings SET max_stavka = ('%s') WHERE bot = 1"%(new_max_stavka,))
            conn.commit()
            bot.send_message(us_id,f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ç–µ–ø–µ—Ä—å {new_max_stavka}', reply_markup=admin_keyboard)
        except:
            bot.send_message(us_id,f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!', reply_markup=admin_keyboard)

#–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–Ω—Ç–∏–º–∏–Ω—É—Å–∞
def new_antiminus(message):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    us_id = message.from_user.id
    new_antiminus = message.text
    if message.text == '–ê–¥–º–∏–Ω–∫–∞':
        adminka_menu(message)
    else:
        try:
            new_antiminus = int(new_antiminus)
            cursor.execute("UPDATE settings SET antiminus = ('%s') WHERE bot = 1"%(new_antiminus,))
            conn.commit()
            bot.send_message(us_id,f'–ê–Ω—Ç–∏–º–∏–Ω—É—Å —Ç–µ–ø–µ—Ä—å {new_antiminus}', reply_markup=admin_keyboard)
        except:
            bot.send_message(us_id,f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!', reply_markup=admin_keyboard)





            cursor.execute(f"UPDATE apple SET all_win = all_win + {win} WHERE user_id = {us_id}")
            cursor.execute(f"UPDATE apple SET game_win = game_win + 1 WHERE user_id = {us_id}")

            cursor.execute(f"UPDATE apple SET all_lose = all_lose + {stavka} WHERE user_id = {us_id}")
            cursor.execute(f"UPDATE apple SET game_lose = game_lose + 1 WHERE user_id = {us_id}")